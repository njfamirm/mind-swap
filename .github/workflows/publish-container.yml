# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build & Publish Containers

on:
  workflow_dispatch:

  # push:
  #   branches:
  #     - next

  # pull_request:

  release:
    types:
      - created

env:
  USER: njfamirm

jobs:
  build:
    if: github.repository_owner == 'njfamirm'

    name: Build & Publish Containers
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: mind-swap-app
            path: ./packages/app
            context: .
          - name: mind-swap-api
            path: ./packages/api
            context: .
          - name: mind-swap-bot
            path: ./packages/bot
            context: .

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: ⤵️ Checkout repository
        uses: actions/checkout@v4.1.1

      - name: ❔ Check Container files changed
        id: file_change
        if: ${{ github.event_name != 'release' && github.event_name != 'workflow_dispatch' }}
        uses: dorny/paths-filter@v3.0.0
        with:
          filters: |
            container_folder:
              ${{ matrix.context }}/**

      - name: 🏗 Install cosign
        if: ${{ github.event_name != 'pull_request' && steps.file_change.outputs.container_folder != 'false' }}
        uses: sigstore/cosign-installer@v3.4.0

      - name: 🏗 Setup Docker Buildx
        if: ${{ steps.file_change.outputs.container_folder != 'false' }}
        uses: docker/setup-buildx-action@v3.0.0

      - name: 🏗 Cache Docker Layers
        if: ${{ steps.file_change.outputs.container_folder != 'false' }}
        uses: actions/cache@v4.0.0
        with:
          path: /tmp/.buildx-cache
          key: container/${{ matrix.name }}

      # - name: 🏗 Log into docker hub registry
      #   if: ${{ github.event_name != 'pull_request' && steps.file_change.outputs.container_folder != 'false' }}
      #   uses: docker/login-action@v3.0.0
      #   with:
      #     username: ${{env.USER}}
      #     password: ${{secrets.DOCKER_HUB_TOKEN}}

      - name: 🏗 Log into ghcr.io registry
        if: ${{ github.event_name != 'pull_request' && steps.file_change.outputs.container_folder != 'false' }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{env.USER}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: 🏗 Extract metadata
        if: ${{ steps.file_change.outputs.container_folder != 'false' }}
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          images: |
            name=ghcr.io/${{env.USER}}/${{matrix.name}},enable=true
            name=docker.io/${{env.USER}}/${{matrix.name}},enable=false
          tags: |
            type=semver,enable=true,pattern={{major}}
            type=semver,enable=true,pattern={{major}}.{{minor}}
            type=semver,enable=true,pattern={{version}}
            type=ref,enable=true,event=branch
          labels: |
            org.opencontainers.image.title="${{matrix.name}}"
            org.opencontainers.image.vendor="Njfamirm"
            org.opencontainers.image.documentation="https://github.com/njfamirm/mind-swap"
            org.opencontainers.image.authors="S. Amir Mohammad Najafi <njfamirm@gmail.com> (https://ali.mihandoost.com), S. Amir Mohammad Najafi <njfamirm@gmail.com> (https://www.njfamirm.ir)"

      - name: 🚀 Build and push container image
        if: ${{ steps.file_change.outputs.container_folder != 'false' }}
        id: build_and_push
        uses: docker/build-push-action@v5.1.0
        with:
          context: ${{matrix.context}}
          file: ${{matrix.path}}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # - name: 🏗 Sign the image with GitHub OIDC Token
      #   if: ${{ github.event_name != 'pull_request' && steps.file_change.outputs.container_folder != 'false' }}
      #   env:
      #     COSIGN_EXPERIMENTAL: 'true'
      #   run: echo "${{steps.meta.outputs.tags}}" | xargs -I {} cosign sign --yes {}@${{steps.build_and_push.outputs.digest}}
